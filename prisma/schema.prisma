datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

model PaymentAccount {
  id              Int           @id @default(autoincrement())
  user_id         String
  account_number  String        @unique
  account_type    ACCOUNT_TYPE
  balance         Decimal       @default(0)
  currency        String        @default("IDR")

  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt

  payment_histories             PaymentHistory[]
  sent_transactions             Transaction[]       @relation("SentTransaction")
  received_transaction          Transaction[]       @relation("ReceivedTransaction")
  recurring_payments            RecurringPayment[]  @relation("UserRecurringPayment")
  receiving_recurring_payments  RecurringPayment[]  @relation("ReceivedRecurringPayment")

  @@index([user_id])
}

model PaymentHistory {
  id                Int               @id @default(autoincrement())
  account_id        Int
  transaction_id    String
  amount            Decimal
  currency          String            @default("IDR")
  transaction_type  TRANSACTION_TYPE
  recurring_id      Int?

  created_at        DateTime  @default(now())

  account     PaymentAccount  @relation(fields: [account_id], references: [id])
  transaction Transaction     @relation(fields: [transaction_id], references: [id])

  @@index([account_id, transaction_id])
}

model Transaction {
  id                  String              @id @default(uuid())
  sender_account_id   Int
  receiver_account_id Int
  amount              Decimal
  currency            String              @default("IDR")
  status              TRANSACTION_STATUS  @default(PENDING)
  recurring_id        Int?

  created_at          DateTime            @default(now())
  updated_at          DateTime            @updatedAt

  payment_history   PaymentHistory[]
  account           PaymentAccount    @relation("SentTransaction", fields: [sender_account_id], references: [id])
  receiver_account  PaymentAccount    @relation("ReceivedTransaction", fields: [receiver_account_id], references: [id])

  @@index([sender_account_id, receiver_account_id])
}

model RecurringPayment {
  id                    Int                       @id @default(autoincrement())
  user_id               String
  account_id            Int
  recurring_date        DateTime
  receiver_account_id   Int
  amount                Decimal
  currency              String                    @default("IDR")
  status                RECURRING_PAYMENT_STATUS  @default(ENABLED)
  last_executed_date    DateTime?

  created_at            DateTime                  @default(now())
  updated_at            DateTime                  @updatedAt

  account           PaymentAccount  @relation("UserRecurringPayment", fields: [account_id], references: [id])
  receiver_account  PaymentAccount  @relation("ReceivedRecurringPayment", fields: [receiver_account_id], references: [id])

  @@index([user_id, account_id, status])
}

enum ACCOUNT_TYPE {
  DEBIT
  CREDIT
  LOAN
}

enum TRANSACTION_TYPE {
  SEND
  RECEIVE
  WITHDRAW
}

enum TRANSACTION_STATUS {
  PENDING
  SUCCESS
  CANCELED
}

enum RECURRING_PAYMENT_STATUS {
  ENABLED
  DISABLED
}
